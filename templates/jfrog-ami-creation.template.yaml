AWSTemplateFormatVersion: '2010-09-09'
Description: 'JFrog Artifactory Quick Start Deployment into an Existing VPC (qs-1q037eflr)'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Security configuration
        Parameters:
          - KeyPairName
          - RemoteAccessCIDR
      - Label:
          default: Network Configuration
        Parameters:
          - VPCID
          - PublicSubnet1ID
      - Label:
          default: JFrog Artifactory AMI info
        Parameters:
          - InstanceOS
          - InstanceType
          - VolumeSize
          - ArtifactoryVersion
          - ArtifactoryRepoUrl
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      KeyPairName:
        default: SSH key name
      RemoteAccessCIDR:
        default: Remote access CIDR
      VPCID:
        default: VPC ID
      PublicSubnet1ID:
        default: Public subnet 1 ID
      InstanceOS:
        default: EC2 instance OS
      InstanceType:
        default: EC2 instance type
      VolumeSize:
        default: EBS root volume size
      ArtifactoryVersion:
        default: Artifactory version
      ArtifactoryRepoUrl:
        default: Artifactory repo url
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix

Parameters:
  KeyPairName:
    Description: The name of an existing public/private key pair, which allows you
      to securely connect to your instance after it launches.
    Type: AWS::EC2::KeyPair::KeyName
  RemoteAccessCIDR:
    Description: The remote CIDR range for allowing SSH into the Bastion instance.
      We recommend that you set this value to a trusted IP range.
      For example, you might want to grant specific ranges inside your corporate network SSH access.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Type: String
  VPCID:
    Description: The ID of your existing VPC (e.g., vpc-0343606e).
    Type: "AWS::EC2::VPC::Id"
  PublicSubnet1ID:
    Description: The ID of the public subnet in Availability Zone 1 in your existing VPC (e.g., subnet-z0376dab).
    Type: "AWS::EC2::Subnet::Id"
  ArtifactoryVersion:
    Description: The version of Artifactory that you want to deploy into the Quick Start.
      Please see the release notes to select the version you want to deploy.
      https://www.jfrog.com/confluence/display/RTF/Release+Notes
    AllowedPattern: ^(([0-9]|[1-9][0-9])\.){2}([1-9][0-9]|[0-9])$
    ConstraintDescription: A version that matches X.X.X per Artifactory releases.
    Default: 6.17.0
    Type: String
  ArtifactoryRepoUrl:
    Description: Base repo to be added to the system to install the RPM.
    Default: https://jfrog.bintray.com/artifactory-pro-rpms
    Type: String
  InstanceOS:
    Description: The Linux distribution for the Amazon Machine Image (AMI) to be used for the bastion instances.
    AllowedValues:
      - "CentOS7HVM"
    Default: "CentOS7HVM"
    Type: String
  InstanceType:
    Description: The EC2 instance type for the Artifactory Docker hosts.
    AllowedValues:
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
    ConstraintDescription: Must contain valid instance type.
    Default: m4.xlarge
    Type: String
  VolumeSize:
    Description: The size in GB of the available storage; the Quick Start will create an
      Amazon Elastic Block Store (Amazon EBS) volumes of this size.
    Default: 200
    Type: Number
  QSS3BucketName:
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Type: String
  QSS3KeyPrefix:
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-jfrog-artifactory/
    Type: String
Mappings:
  AWSAMIRegionMap:
    us-west-2:
      CentOS7HVM: "ami-01ed306a12b7d1c96"
    us-east-1:
      CentOS7HVM: "ami-02eac2c0129f6376b"
Resources:
  JFrogAMIIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Principal:
            Service:
            - "ec2.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: "/"
      Policies:
      - PolicyName: "JFrogAMI-policy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action: "ec2:Describe*"
            Resource: "*"
          - Effect: "Allow"
            Action: "ec2:AttachVolume"
            Resource: "*"
          - Effect: "Allow"
            Action: "ec2:DetachVolume"
            Resource: "*"
          - Effect: "Allow"
            Action:
              - "s3:GetObject"
              - "s3:ListObject"
              - "s3:ListBucket"
            Resource: "*"

  JFrogAMIInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
      - Ref: "JFrogAMIIAMRole"

  JFrogAMISecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AMI Bootstrap Security Group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref RemoteAccessCIDR
      VpcId: !Ref VPCID
  JFrogAMIInstance:
    Type: AWS::EC2::Instance
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          artifactory_ami_setup:
            - "config-ansible-art-ami"
        config-ansible-art-ami:
          files:
            /root/.artifactory_ami/artifactory-ami-setup.yml:
              content: !Sub |
                  # Base install for JFrogAMIInstance
                  - import_playbook: artifactory-ami.yml
                    vars:
                      artifactory_ami_version: ${ArtifactoryVersion}
                      artifactory_ami_repo_url: ${ArtifactoryRepoUrl}
              mode: "0400"
    Properties:
      KeyName: !Ref KeyPairName
      ImageId: !FindInMap
          - AWSAMIRegionMap
          - !Ref AWS::Region
          - !Ref InstanceOS
      IamInstanceProfile: !Ref JFrogAMIInstanceProfile
      InstanceType: !Ref InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref VolumeSize
            VolumeType: gp2
            DeleteOnTermination: true
      NetworkInterfaces:
      - AssociatePublicIpAddress: True
        DeviceIndex: "0"
        GroupSet:
        - !Ref "JFrogAMISecurityGroup"
        SubnetId: !Ref "PublicSubnet1ID"
      UserData: !Base64
          'Fn::Sub':
            - >
              #!/bin/bash -x

              S3URI=https://${QSS3BucketName}.${S3Region}.amazonaws.com/${QSS3KeyPrefix}

              yum install -y git

              echo $PATH

              PATH=/opt/aws/bin:$PATH

              echo $PATH
              echo \'[Cloning: Load QuickStart Common Utils]\'

              git clone
              https://github.com/aws-quickstart/quickstart-linux-utilities.git

              source /quickstart-linux-utilities/quickstart-cfn-tools.source

              echo \'[Loaded: Load QuickStart Common Utils]\'

              echo \'[Update Operating System]\'

              qs_update-os || qs_err

              qs_bootstrap_pip || qs_err

              qs_aws-cfn-bootstrap || qs_err

              pip install virtualenv &> /var/log/userdata.virtualenv_install.log || qs_err " virtualenv install failed "

              virtualenv ~/venv &> /var/log/userdata.create_venv.log || qs_err " creating venv failed "

              source ~/venv/bin/activate &> /var/log/userdata.activate_venv.log || qs_err " activate venv failed "

              pip install awscli &> /var/log/userdata.awscli_install.log || qs_err " awscli install failed "

              pip install ansible &> /var/log/userdata.ansible_install.log || qs_err " ansible install failed "

              pip install selinux &> /var/log/userdata.selinux_install.log || qs_err " selinux install failed "

              yum update --security -y &> /var/log/userdata.yum_security_update.log || qs_err " ansible install failed "

              mkdir ~/.artifactory_ami

              aws s3 sync s3://${QSS3BucketName}/${QSS3KeyPrefix}scripts/ ~/.artifactory_ami/

              cfn-init -v --stack ${AWS::StackName} --resource
              JFrogAMIInstance --configsets artifactory_ami_setup
              --region ${AWS::Region} || cfn_fail

              ansible-playbook /root/.artifactory_ami/artifactory-ami-setup.yml &> /var/log/artifactory-ami.log || qs_err " ansible execution failed "

              rm -rf ~/.artifactory_ami

              cat /home/centos/.ssh/authorized_keys

              [ $(qs_status) == 0 ] && cfn_success || cfn_fail
            - S3Region: s3
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Artifactory-${ArtifactoryVersion}
