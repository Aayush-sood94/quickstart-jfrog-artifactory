AWSTemplateFormatVersion: '2010-09-09'
Description: 'JFrog Artifactory Quick Start Deployment into an Existing VPC (qs-)'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VPCID
          - VPCCIDR
          - PublicSubnet1ID
          - PublicSubnet2ID
          - PrivateSubnet1ID
          - PrivateSubnet2ID
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - AccessCIDR
          - RemoteAccessCIDR
      - Label:
          default: Bastion Configuration
        Parameters:
          - ProvisionBastionHost
          - BastionInstanceType
          - BastionOS
          - BastionRootVolumeSize
          - BastionEnableTCPForwarding
          - NumBastionHosts
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - KeyPairName
          - AmiId
          - VolumeSize
          - InstanceType    
      - Label:
          default: JFrog Artifactory Configuration
        Parameters:
          - ArtifactoryVersion
          - NumberOfSecondary 
          - ArtifactoryLicense1
          - ArtifactoryLicense2
          - ArtifactoryLicense3
          - ArtifactoryLicense4
          - Certificate
          - CertificateKey
          - CertificateDomain
          - ArtifactoryServerName
          - MasterKey
          - KeystorePassword
          - AnsibleVaultPass
      - Label:
          default: Amazon RDS Configuration
        Parameters:
          - DatabaseName
          - DatabaseEngine
          - DatabaseVersion
          - DatabaseUser
          - DatabasePassword
          - DatabaseInstance
          - DBAllocatedStorage
          - MultiAZDatabase
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          #- OutputBucketName
    ParameterLabels:
      AmiId:
        default: AMI ID
      KeyPairName:
        default: SSH Key Name
      VPCID:
        default: VPC ID
      VPCCIDR:
        default: VPC CIDR
      PublicSubnet1ID:
        default: Public Subnet 1 ID
      PublicSubnet2ID:
        default: Public Subnet 2 ID
      PrivateSubnet1ID:
        default: Private Subnet 1 ID
      PrivateSubnet2ID:
        default: Private Subnet 2 ID
      PrivateSubnet1CIDR:
        default: Private Subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private Subnet 2 CIDR
      AccessCIDR:
        default: Permitted IP Range
      RemoteAccessCIDR:
        default: Remote Access CIDR
      ProvisionBastionHost:
        default: Provision Bastion Host
      BastionInstanceType:
        default: Bastion Instance Type
      BastionOS:
        default: Bastion OS
      BastionRootVolumeSize:
        default: Bastion Root Volume Size
      BastionEnableTCPForwarding:
        default: Bastion Enable TCP Forwarding
      NumBastionHosts:
        default: Number of Bastion Hosts
      VolumeSize:
        default: Volume Size
      InstanceType:
        default: Instance Type
      NumberOfSecondary:
        default: Number of Secondary Nodes
      ArtifactoryVersion:
        default: Artifactory Version
      ArtifactoryLicense1:
        default: Artifactory License 1
      ArtifactoryLicense2:
        default: Artifactory License 2
      ArtifactoryLicense3:
        default: Artifactory License 3
      ArtifactoryLicense4:
        default: Artifactory License 4
      Certificate:
        default: Certificate
      CertificateKey:
        default: Certificate Key
      CertificateDomain:
        default: Certificate Domain
      ArtifactoryServerName:
        default: Artifactory Server Name
      MasterKey:
        default: Master Server Key
      KeystorePassword:
        default: Java Keystore Password
      AnsibleVaultPass:
        default: Ansible Vault Password
      DatabaseName:
        default: Database Name
      DatabaseEngine:
        default: Database Engine
      DatabaseVersion:
        default: Database Version
      DatabaseUser:
        default: Database User
      DatabasePassword:
        default: Database Password
      DatabaseInstance:
        default: Database Instance Type
      DBAllocatedStorage:
        default: Database Allocated Storage
      MultiAZDatabase:
        default: High Available Database
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix

Parameters:
  KeyPairName:
    Description: The name of an existing public/private key pair, which allows you
      to securely connect to your instance after it launches
    Type: AWS::EC2::KeyPair::KeyName
  VPCID:
    Description: The ID of your existing VPC (e.g., vpc-0343606e).
    Type: "AWS::EC2::VPC::Id"
  VPCCIDR:
    Description: CIDR block for the VPC
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Type: String
  PublicSubnet1ID:
    Description: The ID of the public subnet in Availability Zone 1 in your existing VPC (e.g., subnet-z0376dab).
    Type: "AWS::EC2::Subnet::Id"
  PublicSubnet2ID:
    Description: The ID of the public subnet in Availability Zone 2 in your existing VPC (e.g., subnet-a29c3d84).
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet1ID:
    Description: The ID of the private subnet in Availability Zone 1 in your existing VPC (e.g., subnet-a0246dcd).
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet2ID: 
    Description: The ID of the private subnet in Availability Zone 2 in your existing VPC (e.g., subnet-b58c3d67).
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet1CIDR:
    Description: The CIDR of the private subnet in Availability Zone 1 in your existing VPC (e.g., 10.0.0.0/19).
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Type: String
  PrivateSubnet2CIDR:
    Description: The CIDR of the private subnet in Availability Zone 2 in your existing VPC (e.g., 10.0.32.0/19).
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Type: String
  AccessCIDR:
    Description: The CIDR IP range that is permitted to access Artifactory. 
      We recommend that you set this value to a trusted IP range. 
      For example, you might want to grant only your corporate network access to the software. 
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 0.0.0.0/0
    Type: String
  RemoteAccessCIDR:
    Description: Remote CIDR range for allowing SSH into the Bastion instance. 
      We recommend that you set this value to a trusted IP range. 
      For example, you might want to grant specific ranges inside your corporate network ssh access. 
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Type: String
    Default: 0.0.0.0/0 
  ProvisionBastionHost:
    Description: Whether to boot a Bastion host or not. Due to the Artifactory nodes being
      created in private subnets, this is highly recommended.
    AllowedValues:
      - "Enabled"
      - "Disabled"
    Default: "Enabled"
    Type: String
  BastionInstanceType:
    Description: Size of the Bastion instance.
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
    Default: "t2.micro"
    Type: String
  BastionRootVolumeSize:
    Description: Size of the root volume on the Bastion instance.
    Default: 10
    Type: Number
  BastionEnableTCPForwarding:
    Description: Whether to enable TCPForwarding via the bootstraping of the Bastion vm
      or not.
    AllowedValues: 
      - "true"
      - "false"
    Default: "true"
    Type: String
  BastionEnableX11Forwarding:
    Description: Whether to enable X11 via the bootstraping of the Bastion vm
      or not.
    AllowedValues:
      - "true"
      - "false"
    Default: "false"
    Type: String
  BastionOS:
    Description: The Linux distribution for the AMI to be used for the bastion instances.
    AllowedValues:
      - "Amazon-Linux-HVM"
      - "CentOS-7-HVM"
      - "Ubuntu-Server-14.04-LTS-HVM"
      - "Ubuntu-Server-16.04-LTS-HVM"
      - "SUSE-SLES-15-HVM"
    Default: "Amazon-Linux-HVM"
    Type: String
  NumBastionHosts:
    Description: Enter the number of bastion hosts to create
    AllowedValues:
      - '1'
      - '2'
      - '3'
      - '4'
    Default: '1'
    Type: String
  AmiId:
    Default: AMZNLINUXHVM
    Description: Ami being utilized as the underlying OS to install Artifactory. 
    AllowedValues: 
      - 'AMZNLINUXHVM'
    Type: String    
  VolumeSize:
    Description: Size in GB of the available storage (will create 3x ebs volumes of this size)
    Default: 200
    Type: Number
  InstanceType:
    Description: EC2 instance type for the Artifactory instances.
    AllowedValues:
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
    ConstraintDescription: Must contain valid instance type
    Default: m4.xlarge
    Type: String
  NumberOfSecondary:
    Description: Number of secondary Artifactory servers to complete your
      HA deployment. Minimum number of 2 to fit the Artifactory best practices.
    AllowedValues:
      - 2
      - 3
    Default: 2
    Type: Number
  ArtifactoryVersion:
    Description: Version of Artifactory you wish to deploy into the Quick Start.
    AllowedPattern: ^(([0-9]|[1-9][0-9])\.){2}([1-9][0-9]|[0-9])$
    ConstraintDescription: A version that matches X.X.X per Artifactory releases
    Default: 6.11.1
    Type: String
  ArtifactoryLicense1:
    Description: Artifactory Enterprise License at least one is required.
    Default: ""
    Type: String
  ArtifactoryLicense2:
    Description: Artifactory Enterprise License 
    Default: ""
    Type: String
  ArtifactoryLicense3:
    Description: Artifactory Enterprise License 
    Default: ""
    Type: String
  ArtifactoryLicense4:
    Description: Artifactory Enterprise License 
    Default: ""
    Type: String
  Certificate:
    Description: The Certificate file to be used to terminate SSL.
    AllowedPattern: ^(-----BEGIN CERTIFICATE-----)([ a-zA-Z0-9\/+=]+) (-----END CERTIFICATE-----)$
    ConstraintDescription: A Certificate that begins with "-----BEGIN CERTIFICATE----- " and ends with "-----END CERTIFICATE----- "
    Default: -----BEGIN CERTIFICATE----- MIIFaDCCA1ACCQD45dB5tZFvCDANBgkqhkiG9w0BAQsFADB2MQswCQYDVQQGEwJV UzELMAkGA1UECAwCQ0ExEjAQBgNVBAcMCVN1bm55dmFsZTEOMAwGA1UECgwFSkZy b2cxFDASBgNVBAsMC0FydGlmYWN0b3J5MSAwHgYDVQQDDBdhcnRpZmFjdG9yeS5s b2NhbGRvbWFpbjAeFw0xOTA3MjMyMzE4MjVaFw0yMDA3MjIyMzE4MjVaMHYxCzAJ BgNVBAYTAlVTMQswCQYDVQQIDAJDQTESMBAGA1UEBwwJU3Vubnl2YWxlMQ4wDAYD VQQKDAVKRnJvZzEUMBIGA1UECwwLQXJ0aWZhY3RvcnkxIDAeBgNVBAMMF2FydGlm YWN0b3J5LmxvY2FsZG9tYWluMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKC AgEA0b3OgTFKkNbXXHzPv3l9IqX7fFZcfS2ZMD4mBuNlGQ6kyyraeoKKiVdkOgQV /dwDxLeW6y+637J2KBiZTccHUS8/eC5ky9E6ECeFToCYsucUKRiWo9Uss6XS1N+Q KQHktCVYy+KFDkJIVEL6LFbUMLz0k1jOhI/FRveT8LQ9cZsfy8KIrCF92ErcdPSL 02KO6RgaBjxRFtAw2ZdO07O9kcKBC5BpJdrEnJHalVJsJbZOqIuNjyKKp/8s9TtW EYhXAbz05RrdQ97Cse1a/rHR5EWL+ITRw3Q/mQUv/ilSrSxb+chtgGb0qdP7aV0h LOuxttQFFU2o62LHqnda6dWljxKpSYUz47ugCK0M4T2bRhy7lUgmZ3PcfZYLE2ue h1qIJfkDfi1WpbptJAs4MbgfTvF2FCAsh8tyFnl+TA5QBWLRcOF9y1qUAATa1JKX zKGf/5hExBRpuq371j4SLAb5qXYUuQqZiCe3O6qTx2Wo/jAOPV49wfK9D9fW5qmq ND1Rpp8sKjlb2ixm7dhCWyWV+iGHpzX5tjBW35rikAisUoap47I1fNzYMiSTvbhv 2+by2YY8jsiYRCRIAKzRbgOgDOXnYVtWFpLgUldMqWqo+X3LztYE8CxD0CQK5u12 GxM5ztXKEaitCqUSjY34Gl4owukA9tzGnu09OuAYGkxVBO0CAwEAATANBgkqhkiG 9w0BAQsFAAOCAgEATH4kyuKvZtq32b3I7yZ27Xp2yaxABs17g0jAzkv7o9GILo+3 cVAJS2warQti+c+A2edjqEc97JXb6ul7/SHs7B9B0P4BZSUsI0byuPlQ45Kht891 jz3SF1o6jpKTniQPqsulMMshmYB6oY6CIyvKpaMaG3DypEXFmwEU7CdWr7oVISkn pU6N6fI+V94Wzd1yHL8Jm/ixP4lqBAZqDhxNRq/Vok94wu2jvWwPIn2M+9myAiOs TSpcqLg8Vn70XkK5uuN1UXYU5QDo78GEZpOj7YfCxVjB43Ct/sEiu3iB0GzyEvq6 jlv07H9PyLjYeM7CuhZdgULBqEWbqNhO5XL/QJMYG06kXkT3GiWFP8pjnQRcJM4Z qQv8fOTDTuX5GumXKctXJwc7y9uywoIPwffEKlGuofWhihy8r/YXu2BgShDF3zYV 1RAHVcWtPT5IqejpRZX5LdL4Hr2eCeUkcVCo7qqYLEwxFnQNG1nMrJJ2ewnlzPac JNNPRXgTDF3OkbON+3Wn/H0ndqIoqapHXSlkR54Stsk9yjHuaJ9TCANw2mxMDzf0 RGw9ecirjpzQdP9jT/zK9X4kqFc0T3P6qN3X3s/OPPbroassRk/eqI/oMS6lNcQm y+SvRUrdtzKgmAfVE5yMLTVG0cZM4gWJ35DZHHqWnrbFEg7C0NLzoYc6yeQ= -----END CERTIFICATE-----
    Type: String
  CertificateKey: 
    Description: The Private Key for the Certificate.     
    AllowedPattern: ^(-----BEGIN PRIVATE KEY-----)([ a-zA-Z0-9\/+=]+) (-----END PRIVATE KEY-----)$
    ConstraintDescription: A Private key that begins with "-----BEGIN PRIVATE KEY-----" and ends with "-----END PRIVATE KEY-----"
    Default: -----BEGIN PRIVATE KEY----- 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 2YpoPnf204ak0AcDNZX257FnjRltUg== -----END PRIVATE KEY-----
    NoEcho: 'true'
    Type: String
  CertificateDomain:
    Description: The domain matching that of the certificate. Ensure it matches as you will 
      get certificate mis-match warnings if not.
    Default: .localhost
    Type: String
  ArtifactoryServerName:
    Description: Name of your Artifactory server, ensure this matches your certificate.
    Default: artifactory
    Type: String
  MasterKey:
    Description: Master key for Artifactory cluster. Generate master.key using command '$openssl rand -hex 16'
    AllowedPattern: ^[a-zA-Z0-9]+$
    MinLength: '1'
    MaxLength: '64'
    ConstraintDescription: Only capital or lowercase letters and numbers, with a Max of 64 characters.
    Default: 1ce2be4490ca2c662cb79636cf9b7b8e
    NoEcho: 'true'
    Type: String
  KeystorePassword:
    Description: To ensure better security we will change the default Java keystore
      password to the one specified.
    NoEcho: 'true'
    Type: String
  AnsibleVaultPass:
    Description: Ansible Vault password to protect Artifactory YAML
    NoEcho: 'true'
    Type: String    
  DatabaseName:
    Description: Type a name for your DB instance. The name must be unique cross all DB instances 
      owned by your AWS account in the current AWS Region. The DB instance identifier is case-insensitive, 
      but is stored as all lowercase (as in "mydbinstance")
    AllowedPattern: ^[a-zA-Z]([a-zA-Z0-9])+$
    MinLength: '1'
    MaxLength: '60'
    ConstraintDescription: 1 to 60 alphanumeric characters First character must be a letter.   
    Default: artdb
    Type: String
  DatabaseEngine:
    Description: Database Engine you wish to run, currently locked to mysql
    AllowedValues:
      - MySQL
    Default: MySQL
    Type: String
  DatabaseVersion:
    Description: Major Version of the Database Engine you wish to run, currently locked to mysql versions
      supported by Artifactory and RDS.
    AllowedValues:
    - 5.5
    - 5.6
    - 5.7
    Default: 5.7
    Type: String
  DatabaseUser:
    Description: Login ID for the master user of your DB instance.
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: ^[a-zA-Z]([a-zA-Z0-9])+$
    ConstraintDescription: 1 to 16 alphanumeric characters. First character must be a letter
    Default: artifactory
    Type: String
  DatabasePassword:
    Description: Password for Artifactory Database User.
    AllowedPattern: ^[^ \\']+$
    MinLength: '8'
    MaxLength: '12'
    ConstraintDescription: Must be at least 8 and no more than
      12 characters containing letters and (minimum 1 capital letter), numbers and
      symbols.
    NoEcho: 'true'
    Type: String
  DatabaseInstance:
    Description: Size of the database to be deployed as part of the Quick Start.
    AllowedValues:
      - db.m3.medium
      - db.m3.large
      - db.m3.xlarge
      - db.m3.2xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.12xlarge
      - db.m5.24xlarge
    ConstraintDescription: Must be a valid database Instance Type
    Default: db.m4.large
    Type: String
  DBAllocatedStorage:
    Description: Size in GB of the available storage for the Database Instance.
    MinValue: 5
    MaxValue: 1024
    Default: 10
    Type: Number
  MultiAZDatabase:
    Description: Create a Multi-Availability Zone Amazon RDS instance.
    ConstraintDescription: True or False
    AllowedValues:
      - True
      - False
    Default: False
    Type: String
  QSS3BucketName:
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Type: String
  QSS3KeyPrefix:
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-jfrog-artifactory/
    Type: String

Conditions:
  EnableBastion: !Equals [!Ref 'ProvisionBastionHost', 'Enabled']
Resources:
  BastionStack:
    Condition: EnableBastion
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template'
      Parameters:
        VPCID: !Ref VPCID
        PublicSubnet1ID: !Ref PublicSubnet1ID
        PublicSubnet2ID: !Ref PublicSubnet2ID
        KeyPairName: !Ref KeyPairName
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}submodules/quickstart-linux-bastion/'
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        BastionInstanceType: !Ref BastionInstanceType
        RootVolumeSize: !Ref BastionRootVolumeSize
        BastionAMIOS: !Ref BastionOS
        EnableTCPForwarding: !Ref BastionEnableTCPForwarding
        EnableX11Forwarding: !Ref BastionEnableX11Forwarding
        NumBastionHosts: !Ref NumBastionHosts
  ArtifactoryS3IAMUser:
    Type: AWS::IAM::User
    Properties:
      UserName: ArtifactoryS3
  ArtifactoryIAMAcessKey: 
    Type: AWS::IAM::AccessKey
    Properties: 
      UserName: !Ref ArtifactoryS3IAMUser 
  ArtifactoryS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  ArtifactoryS3IAMPolicy: 
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: S3BucketPermissions
      PolicyDocument: 
        Version: 2012-10-17
        Statement: 
          - Sid: S3BucketPermissions
            Effect: Allow
            Action: 
              - s3:*
            Resource:
              - Fn::Join:
                - ''
                - - "arn:aws:s3:::"
                  - !Ref ArtifactoryS3Bucket
              - Fn::Join:
                - ''
                - - "arn:aws:s3:::"
                  - !Ref ArtifactoryS3Bucket
                  - "/*"
      Users:
        - !Ref ArtifactoryS3IAMUser  
  ArtifactoryELB:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      SecurityGroups: 
        - !Ref ArtifactoryELBSG
      Subnets: 
        - !Ref PublicSubnet1ID
        - !Ref PublicSubnet2ID
      AppCookieStickinessPolicy:
        - PolicyName: HTTPSCookieStickinessPolicy
          CookieName: connect.sid
      Listeners:
        - LoadBalancerPort: '80'
          InstancePort: '80'
          InstanceProtocol: HTTP
          Protocol: HTTP
        - LoadBalancerPort: '443'
          InstancePort: '443'
          InstanceProtocol: TCP
          Protocol: TCP
      HealthCheck:
        Target: HTTP:80/artifactory/webapp/
        HealthyThreshold: '3'
        UnhealthyThreshold: '3'
        Interval: '30'
        Timeout: '15'
  ArtifactoryDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Private Subnets available to the RDS Instance(s)
      SubnetIds: 
        - !Ref PrivateSubnet1ID
        - !Ref PrivateSubnet2ID
  ArtifactoryDB:
    Type: AWS::RDS::DBInstance
    Properties: 
      AllocatedStorage: !Ref DBAllocatedStorage
      MultiAZ: !Ref MultiAZDatabase
      Engine: !Ref DatabaseEngine
      EngineVersion: !Ref DatabaseVersion
      MasterUsername: !Ref DatabaseUser
      MasterUserPassword: !Ref DatabasePassword
      DBInstanceClass: !Ref DatabaseInstance
      DBName: !Ref DatabaseName
      DBSubnetGroupName: !Ref  ArtifactoryDBSubnetGroup
      VPCSecurityGroups: 
        - !Ref ArtifactoryDBSG
  ArtifactoryDBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: Name
          Value: artifactory-rds-sg
      GroupDescription: SG for RDS Instance to allow communication from the Bastion and Artifactory servers.
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref VPCCIDR
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Ref PrivateSubnet1CIDR
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Ref PrivateSubnet2CIDR
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0         
  ArtifactoryELBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: Name
          Value: artifactory-ELB-sg
      GroupDescription: SG for ELB Ingress from outside and egress to instances
      VpcId: !Ref VPCID
      SecurityGroupIngress:   
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref AccessCIDR
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref AccessCIDR
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
  ArtifactoryEC2SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: Name
          Value: artifactory-ec2-instances-sg
      GroupDescription: SG for EC2 instances (also permits SSH access from the bastion host)
      VpcId: !Ref VPCID
      SecurityGroupIngress:   
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref VPCCIDR
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref VPCCIDR   
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref VPCCIDR
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: !Ref PrivateSubnet1CIDR
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: !Ref PrivateSubnet2CIDR                                
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Ref PrivateSubnet1CIDR
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Ref PrivateSubnet2CIDR            
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: !Ref PrivateSubnet1CIDR
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: !Ref PrivateSubnet2CIDR
  ArtifactoryHostRole:
    #Condition: CreateIAMRole
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Principal:
              Service:
                - ec2.amazonaws.com
            Effect: Allow
        Version: 2012-10-17
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM'
  ArtifactoryHostProfile:
      Type: 'AWS::IAM::InstanceProfile'
      Properties:
        Roles:
          - !Ref ArtifactoryHostRole
        Path: /            
  ArtifactoryMaster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/jfrog-artifactory-ec2-instance.template'
      Parameters:
        PrivateSubnet1ID: !Ref PrivateSubnet1ID
        PrivateSubnet2ID: !Ref PrivateSubnet2ID
        MinScalingNodes: '1' # Always have 1 MasterNode
        MaxScalingNodes: '1' # Always have 1 MasterNode
        DeploymentTag: ArtifactoryMaster
        HostRole: !Ref ArtifactoryHostRole
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        AmiId: !Ref AmiId
        ArtifactoryLicense: !Join # We can do up to 4 due to length
          - ','
          - - !Ref ArtifactoryLicense1
            - !Ref ArtifactoryLicense2
            - !Ref ArtifactoryLicense3
            - !Ref ArtifactoryLicense4
        ArtifactoryServerName: !Ref ArtifactoryServerName
        CertificateDomain: !Ref CertificateDomain
        ArtifactoryIAMAcessKey: !Ref ArtifactoryIAMAcessKey
        SecretAccessKey: !GetAtt ArtifactoryIAMAcessKey.SecretAccessKey
        ArtifactoryS3Bucket: !Ref ArtifactoryS3Bucket 
        CertificateKey: !Ref CertificateKey
        Certificate: !Ref Certificate
        DBType: mysql
        ArtifactoryDBEndpointAddress: !GetAtt ArtifactoryDB.Endpoint.Address
        DatabaseName: !Ref DatabaseName
        DatabaseUser: !Ref DatabaseUser
        DatabasePassword: !Ref DatabasePassword
        ArtifactoryPrimary: 'true'
        MasterKey: !Ref MasterKey
        KeystorePassword: !Ref KeystorePassword
        ArtifactoryVersion: !Ref ArtifactoryVersion
        KeyPairName: !Ref KeyPairName
        HostProfile: !Ref ArtifactoryHostProfile
        SecurityGroups: !Ref ArtifactoryEC2SG
        InstanceType: !Ref InstanceType
        VolumeSize: !Ref VolumeSize
        ArtifactoryELB: !Ref ArtifactoryELB
        AnsibleVaultPass: !Ref AnsibleVaultPass
  ArtifactorySecondary:
    DependsOn: ArtifactoryMaster
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/jfrog-artifactory-ec2-instance.template'
      Parameters:
        PrivateSubnet1ID: !Ref PrivateSubnet1ID
        PrivateSubnet2ID: !Ref PrivateSubnet2ID
        MinScalingNodes: !Ref NumberOfSecondary
        MaxScalingNodes: !Ref NumberOfSecondary
        DeploymentTag: ArtifactorySecondary
        HostRole: !Ref ArtifactoryHostRole
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        AmiId: !Ref AmiId
        ArtifactoryLicense: !Join # We can do up to 4 due to length
          - ','
          - - !Ref ArtifactoryLicense1
            - !Ref ArtifactoryLicense2
            - !Ref ArtifactoryLicense3
            - !Ref ArtifactoryLicense4
        ArtifactoryServerName: !Ref ArtifactoryServerName
        CertificateDomain: !Ref CertificateDomain
        ArtifactoryIAMAcessKey: !Ref ArtifactoryIAMAcessKey
        SecretAccessKey: !GetAtt ArtifactoryIAMAcessKey.SecretAccessKey
        ArtifactoryS3Bucket: !Ref ArtifactoryS3Bucket 
        CertificateKey: !Ref CertificateKey
        Certificate: !Ref Certificate
        DBType: mysql
        ArtifactoryDBEndpointAddress: !GetAtt ArtifactoryDB.Endpoint.Address
        DatabaseName: !Ref DatabaseName
        DatabaseUser: !Ref DatabaseUser
        DatabasePassword: !Ref DatabasePassword
        ArtifactoryPrimary: 'false'
        MasterKey: !Ref MasterKey
        KeystorePassword: !Ref KeystorePassword
        ArtifactoryVersion: !Ref ArtifactoryVersion
        KeyPairName: !Ref KeyPairName
        HostProfile: !Ref ArtifactoryHostProfile
        SecurityGroups: !Ref ArtifactoryEC2SG
        InstanceType: !Ref InstanceType
        VolumeSize: !Ref VolumeSize
        ArtifactoryELB: !Ref ArtifactoryELB
        AnsibleVaultPass: !Ref AnsibleVaultPass

Outputs:
  URL:
    Description: URL of the ELB to access Artifactory
    Value: !Sub "https://${ArtifactoryELB.DNSName}"
