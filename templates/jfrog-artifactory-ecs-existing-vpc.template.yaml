AWSTemplateFormatVersion: '2010-09-09'
Description: 'JFrog Artifactory Quick Start Deployment into an Existing VPC (qs-)'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Security configuration
        Parameters:
          - KeyPairName
          - AccessCIDR
          - RemoteAccessCIDR    
      - Label:
          default: Network Configuration
        Parameters:
          - VPCID
          - VPCCIDR
          - PublicSubnet1ID
          - PublicSubnet2ID
          - PrivateSubnet1ID
          - PrivateSubnet2ID
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
      - Label:
          default: Bastion Configuration
        Parameters:
          - ProvisionBastionHost
          - BastionInstanceType
          - BastionOS
          - BastionRootVolumeSize
          - BastionEnableTCPForwarding
          - NumBastionHosts
      - Label:
          default: ECS Configuration
        Parameters:
          - ClusterName
          - CreateNewECSCluster
          - InstanceType
          - VolumeSize
      - Label:
          default: JFrog Artifactory Configuration
        Parameters:
          - ArtifactoryVersion
          - NumberOfSecondary 
          - ArtifactoryLicense1
          - ArtifactoryLicense2
          - ArtifactoryLicense3
          - ArtifactoryLicense4
          - Certificate
          - CertificateKey
          - CertificateDomain
          - ArtifactoryServerName
          - MasterKey
          - ExtraJavaOptions
          - AnsibleVaultPass
      - Label:
          default: Amazon RDS Configuration
        Parameters:
          - DatabaseName
          - DatabaseEngine
          - DatabaseVersion
          - DatabaseUser
          - DatabasePassword
          - DatabaseInstance
          - DBAllocatedStorage
          - MultiAZDatabase
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      KeyPairName:
        default: SSH Key Name
      AccessCIDR:
        default: Permitted IP Range
      RemoteAccessCIDR:
        default: Remote Access CIDR        
      VPCID:
        default: VPC ID
      VPCCIDR:
        default: VPC CIDR
      PublicSubnet1ID:
        default: Public Subnet 1 ID
      PublicSubnet2ID:
        default: Public Subnet 2 ID
      PrivateSubnet1ID:
        default: Private Subnet 1 ID
      PrivateSubnet2ID:
        default: Private Subnet 2 ID
      PrivateSubnet1CIDR:
        default: Private Subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private Subnet 2 CIDR
      ProvisionBastionHost:
        default: Provision Bastion Host
      BastionInstanceType:
        default: Bastion Instance Type
      BastionOS:
        default: Bastion OS
      BastionRootVolumeSize:
        default: Bastion Root Volume Size
      BastionEnableTCPForwarding:
        default: Bastion Enable TCP Forwarding
      NumBastionHosts:
        default: Number of Bastion Hosts
      ClusterName:
        default: ECS Cluster Name
      CreateNewECSCluster:
        default: Create New ECS Cluster
      InstanceType:
        default: Instance Type
      VolumeSize:
        default: EBS Root Volume Size
      ArtifactoryVersion:
        default: Artifactory Version
      NumberOfSecondary:
        default: Number of Secondary Nodes        
      ArtifactoryLicense1:
        default: Artifactory License 1
      ArtifactoryLicense2:
        default: Artifactory License 2
      ArtifactoryLicense3:
        default: Artifactory License 3
      ArtifactoryLicense4:
        default: Artifactory License 4
      Certificate:
        default: Certificate
      CertificateKey:
        default: Certificate Key
      CertificateDomain:
        default: Certificate Domain
      ArtifactoryServerName:
        default: Artifactory Server Name
      MasterKey:
        default: Master Server Key
      ExtraJavaOptions:
        default: Extra Java Options
      AnsibleVaultPass:
        default: Ansible Vault Password
      DatabaseName:
        default: Database Name
      DatabaseEngine:
        default: Database Engine
      DatabaseVersion:
        default: Database Version
      DatabaseUser:
        default: Database User
      DatabasePassword:
        default: Database Password
      DatabaseInstance:
        default: Database Instance Type
      DBAllocatedStorage:
        default: Database Allocated Storage
      MultiAZDatabase:
        default: High Available Database
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix

Parameters:
  KeyPairName:
    Description: The name of an existing public/private key pair, which allows you
      to securely connect to your instance after it launches.
    Type: AWS::EC2::KeyPair::KeyName
  AccessCIDR:
    Description: The CIDR IP range that is permitted to access Artifactory. 
      We recommend that you set this value to a trusted IP range. 
      For example, you might want to grant only your corporate network access to the software. 
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Type: String
  RemoteAccessCIDR:
    Description: Remote CIDR range for allowing SSH into the Bastion instance. 
      We recommend that you set this value to a trusted IP range. 
      For example, you might want to grant specific ranges inside your corporate network ssh access. 
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Type: String
  VPCID:
    Description: The ID of your existing VPC (e.g., vpc-0343606e).
    Type: "AWS::EC2::VPC::Id"
  VPCCIDR:
    Description: CIDR block for the VPC.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Type: String
  PublicSubnet1ID:
    Description: The ID of the public subnet in Availability Zone 1 in your existing VPC (e.g., subnet-z0376dab).
    Type: "AWS::EC2::Subnet::Id"
  PublicSubnet2ID:
    Description: The ID of the public subnet in Availability Zone 2 in your existing VPC (e.g., subnet-a29c3d84).
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet1ID:
    Description: The ID of the private subnet in Availability Zone 1 in your existing VPC (e.g., subnet-a0246dcd).
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet2ID: 
    Description: The ID of the private subnet in Availability Zone 2 in your existing VPC (e.g., subnet-b58c3d67).
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet1CIDR:
    Description: The CIDR of the private subnet in Availability Zone 1 in your existing VPC (e.g., 10.0.0.0/19).
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Type: String
  PrivateSubnet2CIDR:
    Description: The CIDR of the private subnet in Availability Zone 2 in your existing VPC (e.g., 10.0.32.0/19).
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Type: String
  ProvisionBastionHost:
    Description: Whether to boot a Bastion host or not. Due to the Artifactory nodes being
      created in private subnets, this is highly recommended.
    AllowedValues:
      - "Enabled"
      - "Disabled"
    Default: "Enabled"
    Type: String
  BastionInstanceType:
    Description: Size of the Bastion instance.
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
    Default: "t2.micro"
    Type: String
  BastionRootVolumeSize:
    Description: Size of the root volume on the Bastion instance.
    Default: 10
    Type: Number
  BastionEnableTCPForwarding:
    Description: Whether to enable TCPForwarding via the bootstraping of the Bastion vm
      or not.
    AllowedValues: 
      - "true"
      - "false"
    Default: "true"
    Type: String
  BastionEnableX11Forwarding:
    Description: Whether to enable X11 via the bootstraping of the Bastion vm
      or not.
    AllowedValues:
      - "true"
      - "false"
    Default: "false"
    Type: String
  BastionOS:
    Description: The Linux distribution for the AMI to be used for the bastion instances.
    AllowedValues:
      - "Amazon-Linux-HVM"
      - "CentOS-7-HVM"
      - "Ubuntu-Server-14.04-LTS-HVM"
      - "Ubuntu-Server-16.04-LTS-HVM"
      - "SUSE-SLES-15-HVM"
    Default: "Amazon-Linux-HVM"
    Type: String
  NumBastionHosts:
    Description: Enter the number of bastion hosts to create.
    AllowedValues:
      - '1'
      - '2'
      - '3'
      - '4'
    Default: '1'
    Type: String
  ClusterName:
    Description: Desired name for your ECS cluster.
    Default: JFrog  
    Type: String
  CreateNewECSCluster:
    Description: Whether to create a new ECS cluster with the ClusterName or not
      if you choose Disabled an ECS Cluster with the name used in CluserName must
      exist.
    AllowedValues:
      - "Enabled"
      - "Disabled"
    Default: "Enabled"
    Type: String
  InstanceType:
    Description: EC2 instance type for the Artifactory docker hosts.
    AllowedValues:
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
    ConstraintDescription: Must contain valid instance type.
    Default: m4.xlarge
    Type: String
  VolumeSize:
    Description: Size in GB of the available storage (will create EBS volumes of this size)
    Default: 200
    Type: Number    
  ArtifactoryVersion:
    Description: Version of Artifactory you wish to deploy into the Quick Start.
    AllowedPattern: ^(([0-9]|[1-9][0-9])\.){2}([1-9][0-9]|[0-9])$
    ConstraintDescription: A version that matches X.X.X per Artifactory releases
    Default: 6.11.1
    Type: String
  NumberOfSecondary:
    Description: Number of secondary Artifactory servers to complete your
      HA deployment. Minimum number of 2 to fit the Artifactory best practices. Do not select more than
      you license for.
    AllowedValues:
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
    Default: 2
    Type: Number    
  ArtifactoryLicense1:
    Description: Artifactory Enterprise license at least one is required.
    Default: ""
    Type: String
  ArtifactoryLicense2:
    Description: Artifactory Enterprise license 2.
    Default: ""
    Type: String
  ArtifactoryLicense3:
    Description: Artifactory Enterprise license 3.
    Default: ""
    Type: String
  ArtifactoryLicense4:
    Description: Artifactory Enterprise license 4.
    Default: ""
    Type: String
  Certificate:
    Description: The certificate file to be used to terminate SSL.
    AllowedPattern: ^(-----BEGIN CERTIFICATE-----)\n(.*?\n)+(-----END CERTIFICATE-----)$
    ConstraintDescription: A Certificate that begins with "-----BEGIN CERTIFICATE----- " and ends with "-----END CERTIFICATE----- "
    Type: String
  CertificateKey: 
    Description: The private key for the certificate.     
    AllowedPattern: ^(-----BEGIN [A-Za-z ]+ KEY-----)\n(.*?\n)+(-----END [A-Za-z ]+ KEY-----)$
    ConstraintDescription: A Private key that begins with "-----BEGIN PRIVATE KEY-----" and ends with "-----END PRIVATE KEY-----"
    NoEcho: 'true'
    Type: String
  CertificateDomain:
    Description: The domain matching that of the certificate. Ensure it matches as you will 
      get certificate mis-match warnings if not.
    Default: .localhost
    Type: String
  ArtifactoryServerName:
    Description: Name of your Artifactory server, ensure this matches your certificate.
    Default: artifactory
    Type: String
  MasterKey:
    Description: Master key for Artifactory cluster. Generate a master key using command '$openssl rand -hex 16'.
    AllowedPattern: ^[a-zA-Z0-9]+$
    MinLength: '1'
    MaxLength: '64'
    ConstraintDescription: Only capital or lowercase letters and numbers, with a Max of 64 characters.
    Default: 1ce2be4490ca2c662cb79636cf9b7b8e
    NoEcho: 'true'
    Type: String
  ExtraJavaOptions:
    Description: Setting Java memory parameters for Artifactory. Learn about system requirements for Artifactory 
      https://www.jfrog.com/confluence/display/RTF/System+Requirements#SystemRequirements-RecommendedHardware.
    Default: -Xmx4g
    Type: String      
  AnsibleVaultPass:
    Description: Ansible Vault Password to secure the Artifactory YAML.
    NoEcho: 'true' 
    Type: String
  DatabaseName:
    Description: Type a name for your DB instance. The name must be unique cross all DB instances 
      owned by your AWS account in the current AWS Region. The DB instance identifier is case-insensitive, 
      but is stored as all lowercase (as in "mydbinstance").
    AllowedPattern: ^[a-zA-Z]([a-zA-Z0-9])+$
    MinLength: '1'
    MaxLength: '60'
    ConstraintDescription: 1 to 60 alphanumeric characters First character must be a letter.   
    Default: artdb
    Type: String
  DatabaseEngine:
    Description: Database engine you wish to run, currently locked to mysql.
    AllowedValues:
      - MySQL
    Default: MySQL
    Type: String
  DatabaseVersion:
    Description: Major version of the database engine you wish to run, currently locked to mysql versions
      supported by Artifactory and RDS.
    AllowedValues:
    - 5.5
    - 5.6
    - 5.7
    Default: 5.7
    Type: String
  DatabaseUser:
    Description: Login ID for the master user of your DB instance.
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: ^[a-zA-Z]([a-zA-Z0-9])+$
    ConstraintDescription: 1 to 16 alphanumeric characters. First character must be a letter
    Default: artifactory
    Type: String
  DatabasePassword:
    Description: Password for Artifactory database user.
    AllowedPattern: ^[^ \\']+$
    MinLength: '8'
    MaxLength: '12'
    ConstraintDescription: Must be at least 8 and no more than
      12 characters containing letters and (minimum 1 capital letter), numbers and
      symbols.
    NoEcho: 'true'
    Type: String
  DatabaseInstance:
    Description: Size of the database to be deployed as part of the Quick Start.
    AllowedValues:
      - db.m3.medium
      - db.m3.large
      - db.m3.xlarge
      - db.m3.2xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.12xlarge
      - db.m5.24xlarge
    ConstraintDescription: Must be a valid database Instance Type.
    Default: db.m4.large
    Type: String
  DBAllocatedStorage:
    Description: Size in GB of the available storage for the database instance.
    MinValue: 5
    MaxValue: 1024
    Default: 10
    Type: Number
  MultiAZDatabase:
    Description: Create an Amazon RDS instance that spans multiple Availability Zones.
    ConstraintDescription: True or False
    AllowedValues:
      - "true"
      - "false"
    Default: "false"
    Type: String
  ELBScheme:
    Description: Whether this will be internet facing or internal.
    AllowedValues:
      - internal
      - internet-facing
    Default: internet-facing
    Type: String
  QSS3BucketName:
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Type: String  
  QSS3KeyPrefix:
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-jfrog-artifactory/
    Type: String
Conditions:
  EnableBastion: !Equals [!Ref 'ProvisionBastionHost', 'Enabled']
Resources:
  BastionStack:
    Condition: EnableBastion
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template'
      Parameters:
        VPCID: !Ref VPCID
        PublicSubnet1ID: !Ref PublicSubnet1ID
        PublicSubnet2ID: !Ref PublicSubnet2ID
        KeyPairName: !Ref KeyPairName
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}submodules/quickstart-linux-bastion/'
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        BastionInstanceType: !Ref BastionInstanceType
        RootVolumeSize: !Ref BastionRootVolumeSize
        BastionAMIOS: !Ref BastionOS
        EnableTCPForwarding: !Ref BastionEnableTCPForwarding
        EnableX11Forwarding: !Ref BastionEnableX11Forwarding
        NumBastionHosts: !Ref NumBastionHosts
  ArtifactoryCoreInfraStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/jfrog-artifactory-core-infrastructure.template.yaml"
      Parameters:
        VPCID: !Ref VPCID
        VPCCIDR: !Ref VPCCIDR
        PrivateSubnet1CIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2CIDR: !Ref PrivateSubnet2CIDR
        PrivateSubnet3CIDR: !Ref PrivateSubnet2CIDR # This should end up in no new rule but required for EKS
        SubnetIds: !Join [ ",", [ !Ref PrivateSubnet1ID, !Ref PrivateSubnet2ID ]]
        DBAllocatedStorage: !Ref DBAllocatedStorage
        MultiAZDatabase: !Ref MultiAZDatabase
        DatabaseEngine: !Ref DatabaseEngine
        DatabaseVersion: !Ref DatabaseVersion
        DatabaseUser: !Ref DatabaseUser
        DatabasePassword: !Ref DatabasePassword
        DatabaseInstance: !Ref DatabaseInstance
        DatabaseName: !Ref DatabaseName
  ArtifactoryELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: ArtifactoryELB
      Scheme: !Ref ELBScheme
      Subnets: 
        - !Ref PublicSubnet1ID
        - !Ref PublicSubnet2ID
      Tags: 
        - Key: Name
          Value: artifactory-ELB
      Type: network
  ArtifactoryTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckEnabled: True
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: TCP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      Name: Artifactory
      Port: 443
      Protocol: TCP
      #Tags: 
      #  - !Ref DeploymentTag
      TargetType: instance
      UnhealthyThresholdCount: 3
      VpcId: !Ref VPCID
  ArtifactoryELBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions: 
        - TargetGroupArn: !Ref ArtifactoryTargetGroup
          Type: forward
      LoadBalancerArn: !Ref ArtifactoryELB
      Port: 443
      Protocol: TCP      
  ArtifactoryELBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: Name
          Value: artifactory-ELB-sg
      GroupDescription: SG for ELB Ingress from outside and egress to instances
      VpcId: !Ref VPCID
      SecurityGroupIngress:   
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref AccessCIDR
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref AccessCIDR
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: !Ref AccessCIDR          
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: 0.0.0.0/0          
  ArtifactoryEC2SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: Name
          Value: artifactory-ec2-instances-sg
      GroupDescription: SG for EC2 instances (also permits SSH access from the bastion host)
      VpcId: !Ref VPCID
      SecurityGroupIngress:   
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref VPCCIDR
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref VPCCIDR   
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: !Ref PrivateSubnet1CIDR
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: !Ref PrivateSubnet2CIDR                                
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Ref PrivateSubnet1CIDR
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Ref PrivateSubnet2CIDR            
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: !Ref PrivateSubnet1CIDR
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: !Ref PrivateSubnet2CIDR           
  ArtifactoryECSBuild:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/jfrog-artifactory-ecs-ec2.template.yaml'
      Parameters:
        PrivateSubnet1ID: !Ref PrivateSubnet1ID
        PrivateSubnet2ID: !Ref PrivateSubnet2ID
        ClusterName: !Ref ClusterName
        CreateNewECSCluster: !Ref CreateNewECSCluster
        MinScalingNodes: '3'
        MaxScalingNodes: '3'
        KeyPairName: !Ref KeyPairName
        InstanceType: !Ref InstanceType
        VolumeSize: !Ref VolumeSize
        DeploymentTag: Artifactory
        NumberOfSecondary: !Ref NumberOfSecondary
        ArtifactoryLicense1: !Ref ArtifactoryLicense1
        ArtifactoryLicense2: !Ref ArtifactoryLicense2
        ArtifactoryLicense3: !Ref ArtifactoryLicense3
        ArtifactoryLicense4: !Ref ArtifactoryLicense4
        CertificateDomain: !Ref CertificateDomain
        ArtifactoryServerName: !Ref ArtifactoryServerName
        ArtifactoryIAMAcessKey: !GetAtt ArtifactoryCoreInfraStack.Outputs.IAMAcessKey
        SecretAccessKey: !GetAtt ArtifactoryCoreInfraStack.Outputs.SecretAccessKey
        ArtifactoryS3Bucket: !GetAtt ArtifactoryCoreInfraStack.Outputs.S3Bucket
        ArtifactoryDBEndpointAddress: !GetAtt ArtifactoryCoreInfraStack.Outputs.ArtifactoryDBEndpointAddress
        CertificateKey: !Ref CertificateKey
        Certificate: !Ref Certificate
        DBType: mysql
        DatabaseName: !Ref DatabaseName
        DatabaseUser: !Ref DatabaseUser
        DatabasePassword: !Ref DatabasePassword
        MasterKey: !Ref MasterKey
        ExtraJavaOptions: !Ref ExtraJavaOptions
        ArtifactoryVersion: !Ref ArtifactoryVersion
        SecurityGroups: !Ref ArtifactoryEC2SG
        ArtifactoryTargetGroupArn: !Ref ArtifactoryTargetGroup
        AnsibleVaultPass: !Ref AnsibleVaultPass
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix



Outputs:
  ArtifactoryUrl:
    Description: URL of the ELB to access Artifactory
    Value: !Sub "https://${ArtifactoryELB.DNSName}"
  BastionIP:
    Value: !If
      - EnableBastion
      - !GetAtt BastionStack.Outputs.EIP1
      - ""
