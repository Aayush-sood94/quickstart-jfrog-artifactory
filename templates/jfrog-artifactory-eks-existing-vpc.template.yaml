AWSTemplateFormatVersion: '2010-09-09'
Description: Deploys an EKS cluster with JFrog Artifactory into an existing VPC
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Security configuration
        Parameters:
          - KeyPairName
          - AccessCIDR
          - RemoteAccessCIDR
          - AdditionalEKSAdminArns
          - KubeConfigKmsContext
      - Label:
          default: Network configuration
        Parameters:
          - VPCID
          - VPCCIDR
          - PrivateSubnet1ID
          - PrivateSubnet2ID
          - PrivateSubnet3ID
          - PublicSubnet1ID
          - PublicSubnet2ID
          - PublicSubnet3ID
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PrivateSubnet3CIDR
      - Label:
          default: Bastion Configuration
        Parameters:
          - ProvisionBastionHost
          - BastionInstanceType
          - BastionOS
          - BastionRootVolumeSize
          - BastionEnableTCPForwarding  
      - Label:
          default: JFrog Artifactory Configuration
        Parameters:
          - ArtifactoryVersion
          - ArtifactoryDeploymentSize
          - NumberOfSecondary 
          - ArtifactoryLicense1
          - ArtifactoryLicense2
          - ArtifactoryLicense3
          - ArtifactoryLicense4
          - Certificate
          - CertificateKey
          - MasterKey
      - Label:
          default: Amazon RDS Configuration
        Parameters:
          - DatabaseName
          - DatabaseEngine
          - DatabaseVersion
          - DatabaseUser
          - DatabasePassword
          - DatabaseInstance
          - DBAllocatedStorage
          - MultiAZDatabase              
      - Label:
          default: EC2/EKS configuration
        Parameters:
          - KubernetesVersion
          - NodeInstanceType
          - NumofSecondaryNodes
          - NodeVolumeSize          
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - LambdaZipsBucketName
    ParameterLabels:
      KeyPairName:
        default: SSH key name
      AccessCIDR:
        default: Permitted IP Range          
      RemoteAccessCIDR:
        default: Remote access CIDR
      AdditionalEKSAdminArns:
        default: Additional EKS admin ARNs
      KubeConfigKmsContext:
        default: Kubernetes config KMS context     
      VPCID:
        default: VPC ID
      VPCCIDR:
        default: VPC CIDR
      PublicSubnet1ID:
        default: Public Subnet 1 ID
      PublicSubnet2ID:
        default: Public Subnet 2 ID
      PublicSubnet3ID:
        default: Public Subnet 3 ID        
      PrivateSubnet1ID:
        default: Private Subnet 1 ID
      PrivateSubnet2ID:
        default: Private Subnet 2 ID
      PrivateSubnet3ID:
        default: Private Subnet 3 ID        
      PrivateSubnet1CIDR:
        default: Private Subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private Subnet 2 CIDR
      PrivateSubnet3CIDR:
        default: Private subnet 3 CIDR
      ProvisionBastionHost:
        default: Provision Bastion Host
      BastionInstanceType:
        default: Bastion Instance Type
      BastionOS:
        default: Bastion OS
      BastionRootVolumeSize:
        default: Bastion Root Volume Size
      BastionEnableTCPForwarding:
        default: Bastion Enable TCP Forwarding
      ArtifactoryVersion:
        default: Artifactory Version
      ArtifactoryDeploymentSize:
        default: Artifactory Deployment Size
      NumberOfSecondary:
        default: Number of Secondary pods        
      ArtifactoryLicense1:
        default: Artifactory License 1
      ArtifactoryLicense2:
        default: Artifactory License 2
      ArtifactoryLicense3:
        default: Artifactory License 3
      ArtifactoryLicense4:
        default: Artifactory License 4
      Certificate:
        default: Certificate
      CertificateKey:
        default: Certificate Key
      MasterKey:
        default: Master Server Key
      DatabaseName:
        default: Database Name
      DatabaseEngine:
        default: Database Engine
      DatabaseVersion:
        default: Database Version
      DatabaseUser:
        default: Database User
      DatabasePassword:
        default: Database Password
      DatabaseInstance:
        default: Database Instance Type
      DBAllocatedStorage:
        default: Database Allocated Storage
      MultiAZDatabase:
        default: High Available Database              
      NodeInstanceType:
        default: Node instance type
      NodeVolumeSize:
        default: Master node EBS volume size
      NumofSecondaryNodes:
        default: Number Of Secondary nodes
      KubernetesVersion:
        default: Kubernetes version
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      LambdaZipsBucketName:
        default: Lambda zips bucket name
Parameters:
  KeyPairName:
    Description: The name of an existing public/private key pair, which allows you
      to securely connect to your instance after it launches.
    Type: AWS::EC2::KeyPair::KeyName
  AccessCIDR:
    Description: The CIDR IP range that is permitted to access Artifactory. 
      We recommend that you set this value to a trusted IP range. 
      For example, you might want to grant only your corporate network access to the software. 
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Type: String        
  RemoteAccessCIDR:
    Description:
      The CIDR IP range that is permitted to access the bastion host. We recommend
      that you set this value to a trusted IP range. Setting this parameter to 0.0.0.0/0 
      will open SSH access to the bastion host from any source address.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Type: String
  AdditionalEKSAdminArns:
    Description: '[OPTIONAL] Comma-separated list of IAM users/roles to be granted admin access to the EKS cluster.'
    Default: ""
    Type: CommaDelimitedList
  KubeConfigKmsContext:
    Description: String value used by KMS to encrypt/decrypt Kubernetes config.
    Default: "JFrogArtifactory"
    Type: String
  VPCID:
    Description: ID of your existing VPC for deployment (e.g., vpc-0343606e).
    Type: AWS::EC2::VPC::Id
  VPCCIDR:
    Description: CIDR block for the VPC.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Type: String
  PublicSubnet1ID:
    Description: The ID of the public subnet in Availability Zone 1 in your existing VPC (e.g., subnet-z0376dab).
    Type: "AWS::EC2::Subnet::Id"
  PublicSubnet2ID:
    Description: The ID of the public subnet in Availability Zone 2 in your existing VPC (e.g., subnet-a29c3d84).
    Type: "AWS::EC2::Subnet::Id"
  PublicSubnet3ID:
    Description: The ID of the public subnet in Availability Zone 3 in your existing VPC (e.g., subnet-a29c3d84).
    Type: "AWS::EC2::Subnet::Id"    
  PrivateSubnet1ID:
    Description: The ID of the private subnet in Availability Zone 1 in your existing VPC (e.g., subnet-a0246dcd).
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet2ID: 
    Description: The ID of the private subnet in Availability Zone 2 in your existing VPC (e.g., subnet-b58c3d67).
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet3ID: 
    Description: The ID of the private subnet in Availability Zone 3 in your existing VPC (e.g., subnet-b58c3d67).
    Type: "AWS::EC2::Subnet::Id"    
  PrivateSubnet1CIDR:
    Description: The CIDR of the private subnet in Availability Zone 1 in your existing VPC (e.g., 10.0.0.0/19).
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Type: String
  PrivateSubnet2CIDR:
    Description: The CIDR of the private subnet in Availability Zone 2 in your existing VPC (e.g., 10.0.32.0/19).
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Type: String
  PrivateSubnet3CIDR:
    Description: CIDR block for private subnet 3 located in Availability Zone 3 in your existing VPC (e.g., 10.0.64.0/19).
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.64.0/19
    Type: String
  NodeInstanceType:
    Description: The Amazon EC2 instance type for the masters node group.
    AllowedValues:
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Default: m4.xlarge
    Type: String
  NodeVolumeSize:
    Description: The size of EBS volumes for master node instances, in GB.
    Default: 200
    Type: String
  NumofSecondaryNodes:
    Description: The initial number of secondary node instances to create. 
      NOTE if you do not have large enough instances to boot the number of secondary pods the deployment will fail.
    AllowedValues:
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7    
    Default: 2
    Type: Number
  KubernetesVersion:
    Description: The Kubernetes control plane version.
    AllowedValues: [ "1.13", "1.12", "1.11" ]
    Default: "1.13"
    Type: String
  ProvisionBastionHost:
    Description: Whether to boot a Bastion host or not. Due to the Artifactory nodes being
      created in private subnets, this is highly recommended.
    AllowedValues:
      - "Enabled"
      - "Disabled"
    Default: "Enabled"
    Type: String
  BastionInstanceType:
    Description: Size of the Bastion instance.
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
    Default: "t2.micro"
    Type: String
  BastionRootVolumeSize:
    Description: Size of the root volume on the Bastion instance.
    Default: 10
    Type: Number
  BastionEnableTCPForwarding:
    Description: Whether to enable TCPForwarding via the bootstraping of the Bastion vm
      or not.
    AllowedValues: 
      - "true"
      - "false"
    Default: "true"
    Type: String
  BastionEnableX11Forwarding:
    Description: Whether to enable X11 via the bootstraping of the Bastion vm
      or not.
    AllowedValues:
      - "true"
      - "false"
    Default: "false"
    Type: String
  BastionOS:
    Description: The Linux distribution for the AMI to be used for the bastion instances.
    AllowedValues:
      - "Amazon-Linux-HVM"
      - "CentOS-7-HVM"
      - "Ubuntu-Server-14.04-LTS-HVM"
      - "Ubuntu-Server-16.04-LTS-HVM"
      - "SUSE-SLES-15-HVM"
    Default: "Amazon-Linux-HVM"
    Type: String
  ArtifactoryVersion:
    Description: Version of Artifactory you wish to deploy into the Quick Start.
    AllowedPattern: ^(([0-9]|[1-9][0-9])\.){2}([1-9][0-9]|[0-9])$
    ConstraintDescription: A version that matches X.X.X per Artifactory releases
    Default: 6.11.1
    Type: String
  ArtifactoryDeploymentSize:
    Description: Configuration settings are configured based on the size of deployment.
      Based on HELM it is highly recommended to configure these to ensure full control.
      There are currently 3 supported sizes.
    AllowedValues:
      - Small
      - Medium
      - Large
    Default: Medium
    Type: String
  NumberOfSecondary:
    Description: Number of secondary Artifactory pods to complete your HA deployment. 
      Minimum number of 2 to fit the Artifactory best practices. Do not select more than
      you license for.
    AllowedValues:
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
    Default: 2
    Type: Number       
  ArtifactoryLicense1:
    Description: Artifactory Enterprise license at least one is required.
    Default: ""
    Type: String
  ArtifactoryLicense2:
    Description: Artifactory Enterprise license 2.
    Default: ""
    Type: String
  ArtifactoryLicense3:
    Description: Artifactory Enterprise license 3.
    Default: ""
    Type: String
  ArtifactoryLicense4:
    Description: Artifactory Enterprise license 4.
    Default: ""
    Type: String
  Certificate:
    Description: The certificate file to be used to terminate SSL.
    AllowedPattern: ^(-----BEGIN CERTIFICATE-----)\n(.*?\n)+(-----END CERTIFICATE-----)$
    ConstraintDescription: A Certificate that begins with "-----BEGIN CERTIFICATE----- " and ends with "-----END CERTIFICATE----- "
    Type: String
  CertificateKey: 
    Description: The private key for the certificate.
    AllowedPattern: ^(-----BEGIN [A-Za-z ]+ KEY-----)\n(.*?\n)+(-----END [A-Za-z ]+ KEY-----)$
    ConstraintDescription: A Private key that begins with "-----BEGIN PRIVATE KEY-----" and ends with "-----END PRIVATE KEY-----"
    NoEcho: 'true'
    Type: String
  MasterKey:
    Description: Master key for Artifactory cluster. Generate a master key using command '$openssl rand -hex 16'
    AllowedPattern: ^[a-zA-Z0-9]+$
    MinLength: '1'
    MaxLength: '64'
    ConstraintDescription: Only capital or lowercase letters and numbers, with a Max of 64 characters.
    NoEcho: 'true'
    Type: String
  DatabaseName:
    Description: 
      Type a name for your DB instance. The name must be unique cross all DB instances 
      owned by your AWS account in the current AWS Region. The DB instance identifier is case-insensitive, 
      but is stored as all lowercase (as in "mydbinstance").
    AllowedPattern: ^[a-zA-Z]([a-zA-Z0-9])+$
    MinLength: '1'
    MaxLength: '60'
    ConstraintDescription: 1 to 60 alphanumeric characters First character must be a letter.   
    Default: artdb
    Type: String
  DatabaseEngine:
    Description: Database engine you wish to run, currently locked to mysql.
    AllowedValues:
      - MySQL
    Default: MySQL
    Type: String
  DatabaseVersion:
    Description: Major version of the database engine you wish to run, currently locked to mysql versions
      supported by Artifactory and RDS.
    AllowedValues:
      - 5.5
      - 5.6
      - 5.7
    Default: 5.7
    Type: String
  DatabaseUser:
    Description: Login ID for the master user of your DB instance.
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: ^[a-zA-Z]([a-zA-Z0-9])+$
    ConstraintDescription: 1 to 16 alphanumeric characters. First character must be a letter
    Default: artifactory
    Type: String
  DatabasePassword:
    Description: Password for Artifactory database user.
    AllowedPattern: ^[^ \\']+$
    MinLength: '8'
    MaxLength: '12'
    ConstraintDescription: Must be at least 8 and no more than
      12 characters containing letters and (minimum 1 capital letter), numbers and
      symbols.
    NoEcho: 'true'
    Type: String
  DatabaseInstance:
    Description: Size of the database to be deployed as part of the Quick Start.
    AllowedValues:
      - db.m3.medium
      - db.m3.large
      - db.m3.xlarge
      - db.m3.2xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.12xlarge
      - db.m5.24xlarge
    ConstraintDescription: Must be a valid database Instance Type.
    Default: db.m4.large
    Type: String
  DBAllocatedStorage:
    Description: Size in GB of the available storage for the database instance.
    MinValue: 5
    MaxValue: 1024
    Default: 10
    Type: Number
  MultiAZDatabase:
    Description: Create an Amazon RDS instance that spans multiple Availability Zones.
    ConstraintDescription: True or False
    AllowedValues:
      - "true"
      - "false"
    Default: "false"
    Type: String
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription:
      Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description:
      S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription:
      Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-jfrog-artifactory/
    Description:
      S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  LambdaZipsBucketName:
    Description: '[OPTIONAL] The name of the S3 bucket where the Lambda .zip
      files should be placed. If you leave this parameter blank, an S3 bucket will be created.'
    Default: ''
    Type: String
Rules:
  EKSSupport:
    Assertions:
      - AssertDescription: Your AWS Region does *NOT* yet support Amazon EKS
        Assert: !Contains
          -  - us-west-2
             - us-east-1
             - us-east-2
             - eu-west-1
             - eu-west-2
             - eu-west-3
             - eu-north-1
             - eu-central-1
             - ap-southeast-1
             - ap-southeast-2
             - ap-northeast-1
             - ap-northeast-2
             - ap-south-1
          - !Ref 'AWS::Region'
Resources:
  EKSStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-amazon-eks/templates/amazon-eks.template.yaml"
      Parameters:
        KeyPairName: !Ref KeyPairName
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        AdditionalEKSAdminArns: !Join [ ",", !Ref AdditionalEKSAdminArns ]
        VPCID: !Ref VPCID
        PrivateSubnet1ID: !Ref PrivateSubnet1ID
        PrivateSubnet2ID: !Ref PrivateSubnet2ID
        PrivateSubnet3ID: !Ref PrivateSubnet3ID
        PublicSubnet1ID: !Ref PublicSubnet1ID
        PublicSubnet2ID: !Ref PublicSubnet2ID
        PublicSubnet3ID: !Ref PublicSubnet3ID
        KubernetesVersion: !Ref KubernetesVersion
        NodeInstanceType: !Ref NodeInstanceType
        NumberOfNodes: '1' # 1 for the Artifactory master?
        NodeGroupName: "artifactory-primary"
        NodeVolumeSize: !Ref NodeVolumeSize
        KubeConfigKmsContext: !Ref KubeConfigKmsContext
        BootstrapArguments: "--kubelet-extra-args '--node-labels=partition=artifactory-primary'"
        ProvisionBastionHost: !Ref ProvisionBastionHost
        BastionInstanceType: !Ref BastionInstanceType
        BastionOS: !Ref BastionOS
        BastionRootVolumeSize: !Ref BastionRootVolumeSize
        BastionEnableTCPForwarding: !Ref BastionEnableTCPForwarding
        BastionEnableX11Forwarding: !Ref BastionEnableX11Forwarding
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Sub "${QSS3KeyPrefix}submodules/quickstart-amazon-eks/"
        LambdaZipsBucketName: !Ref LambdaZipsBucketName
  ArtifactorySecondaryNodesStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-amazon-eks/templates/amazon-eks-nodegroup.template.yaml'
      Parameters:
        KeyPairName: !Ref KeyPairName
        PrivateSubnet1ID: !Ref PrivateSubnet1ID
        PrivateSubnet2ID: !Ref PrivateSubnet2ID
        PrivateSubnet3ID: !Ref PrivateSubnet3ID
        VPCID: !Ref VPCID
        NodeInstanceType: !Ref NodeInstanceType
        NumberOfNodes: !Ref NumofSecondaryNodes
        NodeGroupName: "artifactory-secondary"
        NodeVolumeSize: !Ref NodeVolumeSize
        EKSControlPlane: !GetAtt EKSStack.Outputs.EKSClusterName
        ControlPlaneSecurityGroup: !GetAtt EKSStack.Outputs.ControlPlaneSecurityGroup
        NodeInstanceProfile: !GetAtt EKSStack.Outputs.NodeInstanceProfile
        NodeInstanceRoleName: !GetAtt EKSStack.Outputs.NodeInstanceRoleName
        KubernetesVersion: !Ref KubernetesVersion
        BootstrapArguments: "--kubelet-extra-args '--node-labels=partition=artifactory-secondary'"        
  # Allow the bastion host to SSH into the secondary node pools
  BastionToRegularIngress:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
      Description: Allow SSH from Bastion server to Regular Nodes
      GroupId: !GetAtt ArtifactorySecondaryNodesStack.Outputs.EKSNodeSecurityGroup
      SourceSecurityGroupId: !GetAtt EKSStack.Outputs.BastionSecurityGroup
      IpProtocol: tcp
      ToPort: 22
      FromPort: 22
  # Allow the secondary node pools to bidirectionally communicate with "initial" (master) nodes
  RegularToMasterIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties: 
      Description: Allows regular nodes to communicate with master nodes
      GroupId: !GetAtt EKSStack.Outputs.NodeGroupSecurityGroup
      SourceSecurityGroupId: !GetAtt ArtifactorySecondaryNodesStack.Outputs.EKSNodeSecurityGroup
      IpProtocol: '-1'
      FromPort: 0
      ToPort: 65535
  MasterToRegularIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties: 
      Description: Allows master nodes to communicate with regular agent nodes
      GroupId: !GetAtt ArtifactorySecondaryNodesStack.Outputs.EKSNodeSecurityGroup
      SourceSecurityGroupId: !GetAtt EKSStack.Outputs.NodeGroupSecurityGroup
      IpProtocol: '-1'
      FromPort: 0
      ToPort: 65535
  ArtifactoryCoreInfraStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/jfrog-artifactory-core-infrastructure.template.yaml"
      Parameters:
        VPCID: !Ref VPCID
        VPCCIDR: !Ref VPCCIDR
        PrivateSubnet1CIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2CIDR: !Ref PrivateSubnet2CIDR
        PrivateSubnet3CIDR: !Ref PrivateSubnet3CIDR
        SubnetIds: !Join [ ",", [ !Ref PrivateSubnet1ID, !Ref PrivateSubnet2ID, !Ref PrivateSubnet3ID ]]
        DBAllocatedStorage: !Ref DBAllocatedStorage
        MultiAZDatabase: !Ref MultiAZDatabase
        DatabaseEngine: !Ref DatabaseEngine
        DatabaseVersion: !Ref DatabaseVersion
        DatabaseUser: !Ref DatabaseUser
        DatabasePassword: !Ref DatabasePassword
        DatabaseInstance: !Ref DatabaseInstance
        DatabaseName: !Ref DatabaseName
  ArtifactoryCoreStack:
    DependsOn: ArtifactorySecondaryNodesStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/jfrog-artifactory-eks-core-workload.template.yaml"
      Parameters:
        KubeManifestLambdaArn: !GetAtt EKSStack.Outputs.KubeManifestLambdaArn
        HelmLambdaArn: !GetAtt EKSStack.Outputs.HelmLambdaArn
        KubeConfigPath: !GetAtt EKSStack.Outputs.KubeConfigPath
        KubeConfigKmsContext: !Ref KubeConfigKmsContext
        KubeGetLambdaArn: !GetAtt EKSStack.Outputs.KubeGetLambdaArn
        NumberOfSecondary: !Ref NumberOfSecondary
        AccessCIDR: !Ref AccessCIDR
        ArtifactoryLicense1: !Ref ArtifactoryLicense1
        ArtifactoryLicense2: !Ref ArtifactoryLicense2
        ArtifactoryLicense3: !Ref ArtifactoryLicense3
        ArtifactoryLicense4: !Ref ArtifactoryLicense4
        CertificateKey: !Ref CertificateKey
        Certificate: !Ref Certificate
        ArtifactoryIAMAcessKey: !GetAtt ArtifactoryCoreInfraStack.Outputs.IAMAcessKey
        SecretAccessKey: !GetAtt ArtifactoryCoreInfraStack.Outputs.SecretAccessKey
        ArtifactoryS3Bucket: !GetAtt ArtifactoryCoreInfraStack.Outputs.S3Bucket
        ArtifactoryDBEndpointAddress: !GetAtt ArtifactoryCoreInfraStack.Outputs.ArtifactoryDBEndpointAddress
        DatabaseName: !Ref DatabaseName
        DatabaseUser: !Ref DatabaseUser
        DatabasePassword: !Ref DatabasePassword
        MasterKey: !Ref MasterKey
        ArtifactoryVersion: !Ref ArtifactoryVersion
        ArtifactoryDeploymentSize: !Ref ArtifactoryDeploymentSize
Outputs:
  ArtifactoryUrl:
    Value: !GetAtt ArtifactoryCoreStack.Outputs.ArtifactoryUrl
    Description: Public Artifactory URL
  BastionIP:
    Value: !GetAtt EKSStack.Outputs.BastionIP
    Description: Bastion host IP, for admin access via SSH
  KubeConfigPath:
    Value: !GetAtt EKSStack.Outputs.KubeConfigPath
    Description: (Advanced) Amazon S3 bucket containing encrypted Kubernetes config which can be used to access the Kubernetes API.