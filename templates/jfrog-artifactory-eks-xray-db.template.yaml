AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploys Artifactory into an existing Kubernetes cluster"
Parameters:
  DatabaseUser:
    Type: String
  DatabasePassword:
    Type: String
    NoEcho: 'true'
  XrayDatabaseUser:
    Type: String
  XrayDatabasePassword:
    Type: String
    NoEcho: 'true'
  XrayMasterDatabaseUrl:
    Type: String
  PrivateSubnet1ID:
    Type: String
  VpcId:
    Type: String
  KeyPairName:
    Type: String
  KubeManifestLambdaArn:
    Type: String
  EksClusterName:
    Type: String
Mappings:
  AWSAMIRegionMap:
    ap-northeast-1:
      "xray": ami-09dfb20a591375d09 # TODO: Get correct ami - provided by market place tem
    ap-northeast-2:
      "xray": ami-0eb86b82de93a34fb # TODO: Get correct ami - provided by market place tem
    ap-south-1:
      "xray": ami-01b828aa6cc99a322 # TODO: Get correct ami - provided by market place tem
    ap-southeast-1:
      "xray": ami-04a94cc4dc0d08c98 # TODO: Get correct ami - provided by market place tem
    ap-southeast-2:
      "xray": ami-030871aa8d1f0689e # TODO: Get correct ami - provided by market place tem
    ca-central-1:
      "xray": ami-0148cebea7bea4aaf # TODO: Get correct ami - provided by market place tem
    eu-central-1:
      "xray": ami-07961f7c210143a42 # TODO: Get correct ami - provided by market place tem
    eu-west-1:
      "xray": ami-0171b8d46941b4ca1 # TODO: Get correct ami - provided by market place tem
    sa-east-1:
      "xray": ami-0596f196b273bb8a6 # TODO: Get correct ami - provided by market place tem
    us-east-1:
      "xray": ami-0d4d4252cdc2b6f11 # TODO: Get correct ami - provided by market place tem
    us-east-2:
      "xray": ami-00a5fcde44618d39b # TODO: Get correct ami - using ami generated by myself - provided by market place tem
    us-west-1:
      "xray": ami-068cd684b4d3a3a86 # TODO: Get correct ami - provided by market place tem
    us-west-2:
      "xray": ami-03d60da4c8a146a55 # TODO: Get correct ami - provided by market place tem
Resources:
  NameSpace:
    Type: "Custom::KubeManifest"
    Version: '1.0'
    Properties:
      ServiceToken: !Ref KubeManifestLambdaArn
      ClusterName: !Ref EksClusterName
      Manifest:
        kind: Namespace
        apiVersion: v1
        metadata:
          name: xray
          labels:
            app: xray
  XrayHostRole:
      Type: 'AWS::IAM::Role'
      Properties:
        Path: /
        AssumeRolePolicyDocument:
          Statement:
            - Action:
                - 'sts:AssumeRole'
              Principal:
                Service:
                  - ec2.amazonaws.com
              Effect: Allow
          Version: 2012-10-17
        Policies:
        - PolicyName: EC2Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action:
              - "cloudformation:DeleteStack"
              Resource: !Ref "AWS::StackId"
            - Effect: Allow
              Action: [ "ec2:TerminateInstances" ]
              Resource: "*"
              Condition:
                StringEquals:
                  "ec2:ResourceTag/aws:cloudformation:stack-id": !Ref AWS::StackId
            - Effect: Allow
              Action: [ "ec2:DescribeInstances" ]
              Resource: "*"
            - Effect: Allow
              Action:
              - "iam:RemoveRoleFromInstanceProfile"
              - "iam:DeleteInstanceProfile"
              Resource: !Sub "arn:aws:iam::${AWS::AccountId}:instance-profile/*"
            - Effect: Allow
              Action:
              - "iam:DeleteRole"
              - "iam:DeleteRolePolicy"
              Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/EC2Role-${AWS::StackName}"
  XrayHostProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref XrayHostRole
      Path: /
  XrayDatabaseCreate:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [ AWSAMIRegionMap,  !Ref 'AWS::Region', 'xray']
      InstanceType: t2.micro
      IamInstanceProfile: !Ref XrayHostProfile
      SubnetId: !Ref PrivateSubnet1ID
      KeyName: !Ref KeyPairName
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash
            psql postgresql://${DatabaseUser}:${DatabasePassword}@${XrayMasterDatabaseUrl} -c "CREATE USER ${XrayDatabaseUser} WITH PASSWORD '${XrayDatabasePassword}'" &>> /var/log/userdata.xray_database.log
            psql postgresql://${DatabaseUser}:${DatabasePassword}@${XrayMasterDatabaseUrl} -c "grant ${XrayDatabaseUser} to ${DatabaseUser}" &>> /var/log/userdata.xray_database.log
            psql postgresql://${DatabaseUser}:${DatabasePassword}@${XrayMasterDatabaseUrl} -c "CREATE DATABASE xraydb WITH OWNER=${XrayDatabaseUser} ENCODING='UTF8'" &>> /var/log/userdata.xray_database.log
            psql postgresql://${DatabaseUser}:${DatabasePassword}@${XrayMasterDatabaseUrl} -c "GRANT ALL PRIVILEGES ON DATABASE xraydb TO ${XrayDatabaseUser}" &>> /var/log/userdata.xray_database.log

            #aws cloudformation delete-stack ${AWS::StackName}