AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploys Xray into an existing Kubernetes cluster"
Parameters:
  HelmLambdaArn:
    Type: String
  EksClusterName:
    Type: String
  MasterKey:
    Type: String
    NoEcho: 'true'
  XrayVersion:
    Type: String
    Default: 3.3.0
  XrayReplicaCount:
    Type: Number
    Default: 1
  RabbitMQReplicaCount:
    Type: Number
    Default: 1
  DatabaseUrl:
    Type: String
  DatabaseUser:
    Type: String
    Default: xray
  DatabasePassword:
    Type: String
    NoEcho: 'true'
  KubeGetLambdaArn:
    Type: String
Resources:
  ClusterIP:
    Type: "Custom::KubeGet"
    Version: '1.0'
    Properties:
      ServiceToken: !Ref KubeGetLambdaArn
      ClusterName: !Ref EksClusterName
      Namespace: jfrog-artifactory
      Name: svc/quickstart-artifactory-ha-nginx
      JsonPath: '{.spec.clusterIP}'
  XrayDeployment:
    Type: "Custom::Helm"
    Version: "1.0"
    Properties:
      ServiceToken: !Ref HelmLambdaArn
      ClusterName: !Ref EksClusterName
      Namespace: xray
      Name: quickstart-xray
      Chart: jfrog/xray
      RepoUrl: https://charts.jfrog.io/
      Version: !Ref XrayVersion
      Values:
        xray.joinKey: !Sub '${MasterKey}'
        xray.masterKey: !Sub '${MasterKey}'
        xray.jfrogUrl: !Sub 'http://${ClusterIP}:80'
        # set consoleLog to true if you want to debug using kubectl log commands
        xray.consoleLog: true
        database.url: !Sub 'postgres://${DatabaseUrl}'
        database.user: !Sub '${DatabaseUser}'
        database.password: !Sub '${DatabasePassword}'
        postgresql.enabled: false
        replicaCount: !Sub ${XrayReplicaCount}
        rabbitmq-ha.replicaCount: !Sub ${RabbitMQReplicaCount}